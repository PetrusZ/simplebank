name: Deploy to production

on:
  workflow_run:
    workflows: [ Run unit tests ]
    branches: [ master ]
    types:
      - completed

jobs:

  deploy:
    name: Deploy to production
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: 'v1.24.2'
      id: install

    - name: Load secrets and save to app.env
      run: |
        echo "DB_SOURCE=${{ secrets.DB_SOURCE }}" > app.env
        echo "DB_DRIVER=${{ secrets.DB_DRIVER }}" >> app.env
        echo "MIGRATION_URL=${{ secrets.MIGRATION_URL }}" >> app.env
        echo "HTTP_SERVER_ADDRESS=${{ secrets.HTTP_SERVER_ADDRESS }}" >> app.env
        echo "GRPC_SERVER_ADDRESS=${{ secrets.GRPC_SERVER_ADDRESS }}" >> app.env
        echo "TOKEN_SYMMETRIC_KEY=${{ secrets.TOKEN_SYMMETRIC_KEY }}" >> app.env
        echo "ACCESS_TOKEN_DURATION=${{ secrets.ACCESS_TOKEN_DURATION }}" >> app.env
        echo "REFRESH_TOKEN_DURATION=${{ secrets.REFRESH_TOKEN_DURATION }}" >> app.env

    - name: Build, tag, and push image to DockerHub
      env:
        REGISTRY: patrickz07
        REPOSITORY: simple-bank
        IMAGE_TAG: ${{ github.sha }}
      run: |
        echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u $REGISTRY --password-stdin
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -t $REGISTRY/$REPOSITORY:latest .
        docker push -a $REGISTRY/$REPOSITORY

    - name: Deploy image to okteto
      run: |
        curl https://get.okteto.com -sSfL | sh
        okteto context use https://cloud.okteto.com -t ${{ secrets.OKTETO_TOKEN }}
        okteto kubeconfig
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        kubectl rollout restart deployment simple-bank-api-deployment --namespace=simplebank